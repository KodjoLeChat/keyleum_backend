# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type OrganisationCode {
  id: ID!
  version: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  code: String!
  state: OrganisationCodeState!
  organisationId: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum OrganisationCodeState {
  used
  unused
  deleted
}

type Organisation {
  id: ID!
  version: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String
  address: String!
  city: String!
  email: String
  primaryPhoneNumber: String!
  secondaryPhoneNumber: String
  whatsAppNumber: String
  type: OrganisationType!
  state: OrganisationState!
  lessors: [Lessor!]
}

enum OrganisationType {
  flat
  hotel
  commoncourse
  inn
  concession
  space
}

enum OrganisationState {
  enabled
  deleted
}

type Lessor {
  id: ID!
  version: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  uuid: String!
  lastName: String!
  firstName: String!
  gender: Gender!
  email: String
  primaryPhoneNumber: String!
  address: String
  city: String
  profileLink: String
  type: UserType!
  state: UserState!
  secondaryPhoneNumber: String
  whatsAppNumber: String
  status: LessorStatus!
  organisationId: String
  organisation: Organisation
}

enum Gender {
  male
  female
  unknown
}

enum UserType {
  lessor
  tenant
}

enum UserState {
  enabled
  deleted
}

enum LessorStatus {
  admin
  member
}

type Tenant {
  id: ID!
  version: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  uuid: String!
  lastName: String!
  firstName: String!
  gender: Gender!
  email: String
  primaryPhoneNumber: String!
  address: String
  city: String
  profileLink: String
  type: UserType!
  state: UserState!
}

type Flat {
  id: ID!
  version: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  address: String!
  city: String!
  quarter: String!
  price: Int!
  paimentType: PaimentType!
  type: OrganisationType!
  title: String!
  description: String
  startAt: String!
  endAt: String
  state: FlatState!
  lessorId: String!
  organisationId: String!
}

enum PaimentType {
  permonthly
  perhourly
  peryearly
  perdaily
}

enum FlatState {
  enabled
  disabled
  deleted
  archived
  rented
}

type Query {
  lessor(id: String!): Lessor
  lessor_by_uuid(uuid: String!): Lessor
  lessors: [Lessor!]!
  organisation(id: String!): Organisation
  organisations: [Organisation!]!
  tenant(id: String!): Tenant
  tenants: [Tenant!]!
  organisation_code(organisationId: String!): OrganisationCode
  organisation_codes: [OrganisationCode!]!
}

type Mutation {
  insert_lessor(input: LessorCreateInput!): Lessor
  update_lessor(id: String!, input: LessorUpdateInput!): Lessor
  delete_lessor(id: String!): Lessor
  insert_organisation(organisation: OrganisationInsertInput!, lessor: LessorCreateInput!): Organisation!
  update_organisation(id: String!, input: OrganisationUpdateInput!): Organisation
  insert_tenant(input: TenantCreateInput!): Tenant
  update_tenant(id: String!, input: TenantUpdateInput!): Tenant
  delete_tenant(id: String!): Tenant
  insert_flat(input: FlatInsertInput!): Flat
}

input LessorCreateInput {
  firstName: String!
  lastName: String!
  gender: Gender
  email: String
  secondaryPhoneNumber: String
  whatsAppNumber: String
  address: String
  city: String!
  profileLink: String
  uuid: String!
  organisationId: String!
  type: UserType!
  primaryPhoneNumber: String!
}

input LessorUpdateInput {
  firstName: String!
  lastName: String!
  gender: Gender
  email: String
  secondaryPhoneNumber: String
  whatsAppNumber: String
  address: String
  city: String!
  profileLink: String
}

input OrganisationInsertInput {
  type: OrganisationType!
  name: String
  address: String!
  city: String!
  email: String
  secondaryPhoneNumber: String
  whatsAppNumber: String
  primaryPhoneNumber: String
}

input OrganisationUpdateInput {
  type: OrganisationType!
  name: String
  address: String!
  city: String!
  email: String
  secondaryPhoneNumber: String
  whatsAppNumber: String
}

input TenantCreateInput {
  firstName: String!
  lastName: String!
  gender: Gender
  email: String
  address: String
  city: String!
  profileLink: String
  uuid: String!
  primaryPhoneNumber: String!
  type: UserType!
}

input TenantUpdateInput {
  firstName: String!
  lastName: String!
  gender: Gender
  email: String
  address: String
  city: String!
  profileLink: String
}

input FlatInsertInput {
  address: String!
  city: String!
  quarter: String!
  price: Int!
  paimentType: PaimentType!
  title: String!
  description: String
  startAt: String!
  endAt: String
  images: [String!]!
  organisationId: String!
  lessorId: String!
}